WEBVTT
Kind: captions
Language: en

00:00:03.720 --> 00:00:09.930
Here we have our familiar 2link robot in the
configuration where Q2 is greater than 0.

00:00:09.930 --> 00:00:16.529
And over laid on that is the robot with the
same end effector position but Q2 is now less

00:00:16.529 --> 00:00:22.929
than 0. These are the two possible solutions
for this robot in order to achieve this particular

00:00:22.929 --> 00:00:28.679
endpoint pose. We might be interested in how
the robot moves from one configuration to

00:00:28.679 --> 00:00:34.110
the other. It's an interesting motion for
the robot because the end point position is

00:00:34.110 --> 00:00:39.570
exactly the same but the joint angles Q1 and
Q2 need to follow some interesting trajectory

00:00:39.570 --> 00:00:43.450
to move from the first configuration to the second.

00:00:43.450 --> 00:00:49.140
Here's a more vivid example in three dimensions.
This shows a PUMA 560 robot moving to grab

00:00:49.140 --> 00:00:54.940
a ball. Now we can see that the robot is making
that grasp in either the left hand configuration

00:00:54.940 --> 00:00:59.750
or the right handed configuration. We might
ask the question, "How does the robot move

00:00:59.750 --> 00:01:04.869
from a left handed configuration to a right
handed configuration? How do we compute the

00:01:04.869 --> 00:01:08.820
trajectory that allows that to happen?"

00:01:08.820 --> 00:01:14.760
Once again we're going to define a model for
our PUMA 560 robot. Load that into the workspace.

00:01:14.760 --> 00:01:21.900
We have the robot object. Say here. The workspace
variable p560. I'm going to define a pose

00:01:21.900 --> 00:01:29.580
that I'd like my robot to adopt. And let's
give him by this homogeneous transformation

00:01:29.580 --> 00:01:36.920
matrix here. I'm going to define a new workspace
variable that represents the set of join angles

00:01:36.920 --> 00:01:43.950
required by the robot to adopt this particular
pose in the left handed configuration. I use

00:01:43.950 --> 00:01:50.540
the ikine6s method, pass in the homogeneous
transformation representing the desired pose

00:01:50.540 --> 00:01:56.280
and the switch L to indicate the robot is
to be in a left handed configuration and this

00:01:56.280 --> 00:02:02.210
is the required set of joint angles. I can
do the same thing for a right handed configuration.

00:02:02.210 --> 00:02:07.350
I'm going to create a new workspace for a
variable called QR.

00:02:07.350 --> 00:02:12.450
Let's have a look at these particular robot
configurations. I can plot the configuration

00:02:12.450 --> 00:02:19.480
QL. And it looks like this in stick figure
representation. Let me look at that from a

00:02:19.480 --> 00:02:26.310
different vantage point. And it looks like
this for the right handed configuration. Now

00:02:26.310 --> 00:02:30.120
getting a little bit ahead of ourselves, what
I'm going to do is to create a trajectory

00:02:30.120 --> 00:02:34.239
and show the robot moving from the configuration
where all those joint angles are equal to

00:02:34.239 --> 00:02:39.590
0 to the left handed pose. It's going to do
that in 50 time steps.

00:02:39.590 --> 00:02:45.810
Now the result of the jtraj function and we'll
talk more about this later in the lecture

00:02:45.810 --> 00:02:52.319
is a matrix with 50 rows and 6 columns. Each
row corresponds to particular time step. Row

00:02:52.319 --> 00:02:57.160
1 is the first point of the trajectory. Row
50 is the last point of the trajectory. Each

00:02:57.160 --> 00:03:00.700
column represents a particular joint angle.

00:03:00.700 --> 00:03:06.660
Now the robotic tool box can easily deal with
trajectories. So I plot but instead of a particular

00:03:06.660 --> 00:03:11.940
joint angle I plot a trajectory. We see the
robot now moving from 0 angle configuration

00:03:11.940 --> 00:03:14.440
to a left handed configuration.

00:03:17.360 --> 00:03:20.760
I can change this two, move from the 0 angle configuration

00:03:20.770 --> 00:03:26.239
to the right handed configuration, and once
again I can plot that. See the robot doing

00:03:26.239 --> 00:03:34.660
a quite convoluted looking motion. Finally
what I can do is show the robot moving from

00:03:34.660 --> 00:03:39.160
the left handed configuration to the right
handed configuration.

00:03:39.160 --> 00:03:44.349
And this is an interesting motion because
the robot starts and ends the trajectory with

00:03:44.349 --> 00:03:49.739
its end effector in exactly the same pose.
But in between the robot is going to go through

00:03:49.739 --> 00:03:56.739
some contortions in order to change from being
a left handed robot to a right handed robot.

00:03:56.739 --> 00:04:01.379
Compute the trajectory and then we're going
to have a look at that. Interesting to see

00:04:01.379 --> 00:04:06.129
what the robot does here. You can see that
the motion is quite complex and the end effector ends

00:04:06.129 --> 00:04:13.409
up just where it started. Sometimes in a manufacturing
scenario, the robot does exactly need to change

00:04:13.409 --> 00:04:18.329
from being left handed to being right handed.
Perhaps it needs to access objects at the

00:04:18.329 --> 00:04:22.320
extreme ends of its workspace and needs to
change configuration.

00:04:22.320 --> 00:04:28.830
So these configuration change motions, there
is no net over all the motion of the robot

00:04:28.830 --> 00:04:33.979
but while it's doing the configuration change,
there can be some quite wild and exciting

00:04:33.979 --> 00:04:39.060
joint motions. You need to be a little bit
careful when you command such a motion that

00:04:39.060 --> 00:04:42.560
the robot is not going to collide with anything
in its workspace.

