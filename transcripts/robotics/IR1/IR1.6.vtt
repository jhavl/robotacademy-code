WEBVTT
Kind: captions
Language: en-GB

00:00:03.560 --> 00:00:08.350
There is a lot of interest today in robots
that drive, otherwise known as self driving

00:00:08.350 --> 00:00:15.250
cars and such technology has been depicted
in fiction for a very long time. The origin

00:00:15.250 --> 00:00:20.509
of self driving car technology can probably
be traced back to these two research robots

00:00:20.509 --> 00:00:22.470
from the 1960s.

00:00:22.470 --> 00:00:27.810
On the left we have a machine known as the
Stanford cart. This one here was built by

00:00:27.810 --> 00:00:33.090
Hans Moravec. What this robot is doing is
using a vision system. In fact, a stereo vision

00:00:33.090 --> 00:00:38.480
system to reconstruct the three dimensional
nature of the world in which it’s driving.

00:00:38.480 --> 00:00:44.340
It uses that information to plan a path so
that it can avoid hitting any of these obstacles.

00:00:44.340 --> 00:00:49.750
This machine was excruciatingly slow. Mostly
dictated by the limited computing power that

00:00:49.750 --> 00:00:53.770
was available for the problem back in 1964.

00:00:53.770 --> 00:00:58.400
The robot on the right is also pretty famous.
It’s known as Shakey and developed at SRI

00:00:58.400 --> 00:01:04.839
International in the late 60s and its career
went on through the 70s. This robot also used

00:01:04.839 --> 00:01:11.439
sense of vision to build a map of the environment
in which it was navigating. A major step forward

00:01:11.439 --> 00:01:17.880
in self driving car technology was the DARPA
urban challenge in 2007. A number of teams competed

00:01:17.880 --> 00:01:23.439
to build robot cars that could perform as
well as human drivers. They had to perform

00:01:23.439 --> 00:01:29.260
tasks like moving into parking bays. They
had to do the right things at the intersections.

00:01:29.260 --> 00:01:34.049
They had to demonstrate that they could do
overtaking and all of this safely with skill

00:01:34.049 --> 00:01:37.609
levels comparable to human drivers.

00:01:37.609 --> 00:01:42.369
The winner of that competition was this robot
car called, ‘Boss’ developed by Carnegie

00:01:42.369 --> 00:01:47.509
Mellon University and we can see that it doesn't
look anything like an ordinary car. It’s

00:01:47.509 --> 00:01:52.609
bristling with all sorts of sensory devices
and a large part of the car is filled with

00:01:52.609 --> 00:01:54.789
high performance computing equipment.

00:01:54.789 --> 00:02:01.890
Now technology has evolved pretty rapidly
so by the year 2014, Google cars look much

00:02:01.890 --> 00:02:06.259
more sleek. There is really in fact only one
sensor that’s obvious when you look at the

00:02:06.259 --> 00:02:11.849
car and that is the device known as a Velodyne
scanning laser range finder on the roof of

00:02:11.849 --> 00:02:18.110
the car. The way the robot car sees its world
is shown here in what we call a point cloud

00:02:18.110 --> 00:02:24.840
image and this is generated by that Velodyne
scanner that we saw on top of the Google car.

00:02:24.840 --> 00:02:29.520
The point cloud is a number of points in three
dimensional space and they are typically color

00:02:29.520 --> 00:02:34.459
coded. So the colors blue, the cool colors
indicate the ground plane on which the robot

00:02:34.459 --> 00:02:39.760
is driving and points above the ground plane
where it might be imprudent to drive are colored

00:02:39.760 --> 00:02:44.629
green or red for those points that are very
high above the ground plane. So from this

00:02:44.629 --> 00:02:49.861
fairly simple three dimensional geometric
model of the world surrounding the car, the

00:02:49.861 --> 00:02:54.790
software on board the car is able to make
a number of decisions about which direction

00:02:54.790 --> 00:02:55.790
it should drive.

00:02:55.790 --> 00:03:01.540
It’s able to see other objects perhaps human
beings, perhaps other cars, perhaps road signs.

00:03:01.540 --> 00:03:06.810
The software on board the vehicle has to take
all of this rich sensory information and create

00:03:06.810 --> 00:03:11.599
a plan and then send commands to the car to
adjust the steering wheel or to adjust the

00:03:11.599 --> 00:03:13.340
throttle or to adjust the brake.

