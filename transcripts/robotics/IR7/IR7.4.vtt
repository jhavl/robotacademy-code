WEBVTT
Kind: captions
Language: en

00:00:03.470 --> 00:00:08.069
Now we're going to look at a robot with six
joints or six degrees of freedom and this

00:00:08.069 --> 00:00:14.680
is a robot that moves in three dimensions.
I'm going to start by loading a model for

00:00:14.680 --> 00:00:20.650
the Puma 560 robot and that creates a number
of robots in the workspace. Most important

00:00:20.650 --> 00:00:26.650
of these is the variable P560, this is a MATLAB
object that represents an object. There are

00:00:26.650 --> 00:00:32.430
a few other variables as well and these represent
particular joint angle configurations, QZ

00:00:32.430 --> 00:00:38.020
for instance is a vector of length six with
all zeros and it represents the set of zero

00:00:38.020 --> 00:00:41.500
joint angles for this particular robot.

00:00:41.500 --> 00:00:46.000
The robot objects have got a lot of methods
and one of the methods; the plot method, allows

00:00:46.000 --> 00:00:51.570
us to view the configuration of a robot, so
here is that particular robot when all the

00:00:51.570 --> 00:00:58.180
joint angles are equal to zero. I can look
at this from a number of different viewpoints

00:00:58.180 --> 00:01:03.430
and see the robot and we can see also the
robot end effector co-ordinate frame here

00:01:03.430 --> 00:01:08.840
showing the X, Y and Z axes of the robot end
effector.

00:01:08.840 --> 00:01:12.900
Now we're talking about inverse kinematics
so I want the robot to go to a particular

00:01:12.900 --> 00:01:18.100
pose and I'm going to define that. First of
all I'm going to define it's translational

00:01:18.100 --> 00:01:24.540
component using the function transl and I
want an X co-ordinate of 0.6, a Y co-ordinate

00:01:24.540 --> 00:01:31.190
of 0.1 and a Z co-ordinate of 0 and now I
need to give it some orientation. And I do

00:01:31.190 --> 00:01:38.020
that by specifying its role, pitch and yaw
angles. I want the role angle to be 0, I want

00:01:38.020 --> 00:01:45.000
the pitch angle to be 180 degrees and I want
the yaw angle to be 0 degrees and I specify

00:01:45.000 --> 00:01:52.490
that I have given the angles in terms of unit of degrees. And here is the homogeneous transformation

00:01:52.490 --> 00:01:56.170
matrix representing the pose that I'm interested in.

00:01:56.170 --> 00:02:02.780
Now let's have a look at that particular pose
and I can superimpose the pose into the figure

00:02:02.780 --> 00:02:09.509
that contains the robot, enable hold and I
now plot that particular pose and then we

00:02:09.509 --> 00:02:14.950
can see the co-ordinate frame which represents
this pose and we can have a look around here.

00:02:14.950 --> 00:02:19.230
So the position associated with this pose
is the origin of this new blue co-ordinate

00:02:19.230 --> 00:02:27.340
frame and we can see the orientation of this
new frame in terms of its X, Y and Z axes.

00:02:27.340 --> 00:02:32.770
Now our job is to determine the joint angles
the robot needs to adopt so that its end effector

00:02:32.770 --> 00:02:39.120
lines up with this new desired pose. Do that
using inverse kinematics. There is an inverse

00:02:39.120 --> 00:02:43.810
kinematic method associated with the robot
object and the method's name is ikine, which

00:02:43.810 --> 00:02:49.459
is short hand for inverse kinematics, six,
for a six degree of freedom robot and S because

00:02:49.459 --> 00:02:56.239
it has a spherical wrist. And the only argument
that I pass in is T, the homogeneous transformation

00:02:56.239 --> 00:02:59.060
representing the desired pose.

00:02:59.060 --> 00:03:03.500
The result is the set of joint angles that
if the robot adopted these joint angles, it

00:03:03.500 --> 00:03:09.680
would achieve the pose. Well let's test that,
we can move our robot to this set of joint

00:03:09.680 --> 00:03:15.030
angles that we've just computed and we can
see here that the robot has definitely moved.

00:03:15.030 --> 00:03:18.849
Now let's have a look around in here and see
what's happened. So we can see that the center

00:03:18.849 --> 00:03:23.379
of the end effector is now lined up with the
center of this new co-ordinate frame that

00:03:23.379 --> 00:03:29.840
we introduced and we can see that the X, Y
and Z axes of the robot end effector are lined

00:03:29.840 --> 00:03:37.069
up with the X, Y and Z axes of the blue frame
that we just introduced. Now it's a little

00:03:37.069 --> 00:03:43.569
difficult in this stick figure plot, to determine
the configuration of this particular robot.

00:03:43.569 --> 00:03:48.239
Is this in a left handed configuration or
a right handed configuration. It's really

00:03:48.239 --> 00:03:53.940
a bit difficult to tell, however there is
an improved way of looking at the robot, and

00:03:53.940 --> 00:04:00.110
that's using the method Plot 3D. It takes
a little moment to get started the first time

00:04:00.110 --> 00:04:07.269
you run it because it needs to load some detailed
CAD models of the robot into the workspace.

00:04:07.269 --> 00:04:15.280
What we see here is then a beautifully rendered
image of the Puma 560 robot and it's quite

00:04:15.280 --> 00:04:21.449
clear that the robot is in a left handed configuration
and the orientation of its gripper is straight

00:04:21.449 --> 00:04:27.630
down basically in a configuration where it
could pick things up from a horizontal table.

00:04:27.630 --> 00:04:32.180
Now we might be interested in putting the
robot into a different configuration. We can

00:04:32.180 --> 00:04:38.240
do that by re-computing the inverse kinematics,
but this time we're going to pass in an option

00:04:38.240 --> 00:04:44.270
R, which is asking for the joint angles that
correspond to a right handed configuration.

00:04:44.270 --> 00:04:48.990
Here is the set of joint angles and we can
plot those and we can see now that our robot

00:04:48.990 --> 00:04:54.770
is very clearly in a right handed configuration.

00:04:54.770 --> 00:05:00.650
Now I could also ask for it to be in a right
handed configuration with the elbow down rather

00:05:00.650 --> 00:05:06.340
than up and pass in the option D to indicate
that. We have now a different set of joint

00:05:06.340 --> 00:05:11.300
angles, you see that they differ to the values
shown above and we can plot this and we can

00:05:11.300 --> 00:05:16.400
see that our robot now is in a right handed
configuration but with its elbow down and

00:05:16.400 --> 00:05:24.690
the wrist is in a very, very odd pose indeed.
It looks quite awkward. I can also then ask

00:05:24.690 --> 00:05:32.800
for the robot to be in a left handed configuration
with the elbow being down and I can plot that

00:05:32.800 --> 00:05:37.360
and it looks something like this...

00:05:37.360 --> 00:05:41.720
What we've seen for this six degree of freedom
robot that moves in three dimensions, is that

00:05:41.720 --> 00:05:48.110
there are in fact eight solutions for any
particular end effector pose. There is a solution

00:05:48.110 --> 00:05:53.759
where the robot is either in a left handed
or right handed configuration, there is solutions

00:05:53.759 --> 00:05:57.419
where the elbow is up, that means that the
elbow is higher than the shoulder or where

00:05:57.419 --> 00:06:01.750
the elbow is down; that's where the elbow
is below the shoulder and there's solutions

00:06:01.750 --> 00:06:08.979
where the wrist is flipped or not flipped,
that's a rotation of 180 degrees in the configuration

00:06:08.979 --> 00:06:14.210
of the wrist. For the case of the robot with
a two fingered gripper, as is shown here,

00:06:14.210 --> 00:06:20.350
then a rotation of 180 degrees around the
wrist axis, leaves two fingers in effectively

00:06:20.350 --> 00:06:26.229
the same configuration and it makes no difference
when it comes to grasping an object, picking

00:06:26.229 --> 00:06:27.720
it up or putting it down.

