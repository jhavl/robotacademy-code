WEBVTT
Kind: captions
Language: en-GB

00:00:04.190 --> 00:00:10.510
Here we are inside the MATLAB desktop environment.
I have set the working directory to the folder

00:00:10.510 --> 00:00:15.469
that contains those holiday snaps.
So what we are going to do is load the image

00:00:15.469 --> 00:00:20.860
we were just looking at into the MATLAB workspace.
I need to put that data into a workspace variable

00:00:20.860 --> 00:00:27.280
called im. That is kind of my personal short
hand for image. We use the iread function.

00:00:27.280 --> 00:00:34.370
Short for image read. And we put in the rather
cryptic name of the file that contains the

00:00:34.370 --> 00:00:42.829
image. And we therefore load the picture into
this workspace variable called im. Another

00:00:42.829 --> 00:00:47.519
toolbox function allows us to display a variable
as an image.

00:00:47.519 --> 00:00:52.539
And here we can see it; here we can see the
crocodile displayed from inside the MATLAB

00:00:52.539 --> 00:00:57.960
environment. The image file contains not just
the pixel information that we are looking

00:00:57.960 --> 00:01:03.159
at here; it also contains what we call the
metadata. So let’s go back and see if we

00:01:03.159 --> 00:01:09.190
can find the metadata. We will close that
image and we will modify our reading command

00:01:09.190 --> 00:01:16.710
so that it returns two output variables.
The pixel data in the variable im and the

00:01:16.710 --> 00:01:23.210
metadata into another variable called meta.
There we go. And display that variable called

00:01:23.210 --> 00:01:27.920
meta. And we can see interesting information
here about the image, we can see the date

00:01:27.920 --> 00:01:32.590
that it was taken, we can see that it was
taken with a Panasonic camera and we can see

00:01:32.590 --> 00:01:38.150
the model of the camera. There is even more
detail information in this sub-structure.

00:01:38.150 --> 00:01:45.710
And here we can see the exposure time and
the F number of the camera when I took that

00:01:45.710 --> 00:01:51.720
particular picture and we can see that the
flash didn’t fire and lots of other information

00:01:51.720 --> 00:01:54.550
as well.
But we are getting ahead of ourselves, we

00:01:54.550 --> 00:01:57.630
have been dealing with a colour image and
colour is a topic that we are not going to

00:01:57.630 --> 00:02:01.640
visit for another couple of weeks. So let’s
start with something a little bit simpler.

00:02:01.640 --> 00:02:05.750
We are going to look at what some people call
a black and white image, but what is more

00:02:05.750 --> 00:02:11.480
correctly known as a greyscale image. So what
I am going to do here is to clear all the

00:02:11.480 --> 00:02:16.420
variables in the workspace, I am going to
clear the console. And I am going to load

00:02:16.420 --> 00:02:22.410
a new image and this is an image that is shipped
with the software, it is an image of a street

00:02:22.410 --> 00:02:28.220
in Paris and its file has got an extension
of PNG which stands for portable network graphic.

00:02:28.220 --> 00:02:35.100
It’s just another type of image file format.
Load that into the workspace into the variable

00:02:35.100 --> 00:02:42.480
im. Now we can see over here the information
about the variable. It says that it is 851

00:02:42.480 --> 00:02:50.420
rows by 1280 columns. MATLAB is considering
this as a matrix. There is a few interesting

00:02:50.420 --> 00:02:56.040
things about this matrix. MATLAB provides
a facility to examine the elements of a matrix.

00:02:56.040 --> 00:03:01.430
We do that by right clicking on the variable,
and let’s maximise the view.

00:03:01.430 --> 00:03:06.680
And here we can see a small, sub-section of
all the numbers that are within this very,

00:03:06.680 --> 00:03:11.319
very large matrix. It is a spreadsheet style
display, it’s got scroll bars and we can

00:03:11.319 --> 00:03:16.610
roll down and see lots and lots of numbers.
And you will see they’re all integer numbers.

00:03:16.610 --> 00:03:22.069
You will see that there are no negative ones
and you will also notice that there are none

00:03:22.069 --> 00:03:25.730
bigger then 255.

00:03:25.730 --> 00:03:30.709
Another thing to notice is that this variable
has got a type and that type is uint8 and

00:03:30.709 --> 00:03:37.410
that is short hand or code for unsigned integer
eight bits. So all the numbers in this variable

00:03:37.410 --> 00:03:42.730
im are eight bit unsigned integers, which
means the smallest value they could have is

00:03:42.730 --> 00:03:47.050
0 and the greatest value that they can have
is 255.

00:03:47.050 --> 00:03:54.660
The MATLAB variable im contains a lot of numbers,
but they originated from an image so the numerical

00:03:54.660 --> 00:03:59.739
information within that variable represents
visual information. So let’s display it

00:03:59.739 --> 00:04:05.060
as an image rather then display it as numbers
and we use the function we used earlier, the

00:04:05.060 --> 00:04:11.239
idisp function. Pass in the image. And here
we see a picture of a Parisian street.

00:04:11.239 --> 00:04:18.180
Now what we can do is we can examine the various
pixels that comprise this image. So let’s

00:04:18.180 --> 00:04:24.090
have a look at a pixel over here and if I
click on that, it displays three pieces of

00:04:24.090 --> 00:04:27.800
information. The first piece of information
is the coordinate of this particular pixel

00:04:27.800 --> 00:04:33.530
and the coordinate is a 105—that is the
horizontal coordinate—and 87, which is the

00:04:33.530 --> 00:04:39.880
vertical coordinate. Now the image processing
the convention is that the horizontal coordinate,

00:04:39.880 --> 00:04:45.550
I refer to that generally as the variable
u, increases from left to right and the vertical

00:04:45.550 --> 00:04:51.060
coordinate which I generally refer to as v
increases from the top to the bottom. The

00:04:51.060 --> 00:04:55.780
other piece of information that is displayed
here is what is called the greyscale value.

00:04:55.780 --> 00:05:02.150
That is the numeric value of the pixel at
that particular coordinate and in this case

00:05:02.150 --> 00:05:06.630
it has a value of a 194.
And we said that the pixel values can vary

00:05:06.630 --> 00:05:15.240
between 0 and 255. Convention is that a low
number is dark and a high number is bright.

00:05:15.240 --> 00:05:21.660
255 being the largest value corresponds to
bright white; 0, the smallest value, corresponds

00:05:21.660 --> 00:05:28.680
to the darkest dark. This particular value—a
194—is fairly bright. If I click a value

00:05:28.680 --> 00:05:35.889
in this dark doorway we see it has got a value
only of 12. Look down on the shadow of the

00:05:35.889 --> 00:05:41.340
street, we see it has got a value of 66. So
the pixel values are reflecting the intensity

00:05:41.340 --> 00:05:47.830
of light at this particular point in the scene.
We can also get access to this pixel value

00:05:47.830 --> 00:05:52.810
by addressing the element within the matrix
directly. The matrix is the workspace variable

00:05:52.810 --> 00:06:01.530
im and we need to provide first of all the
row coordinate, which is 653, and we need

00:06:01.530 --> 00:06:09.100
to provide the column coordinate, which is
562. We access that element of the matrix

00:06:09.100 --> 00:06:15.360
and we see the grayscale value of 66. Now
notice what has happened here is that the

00:06:15.360 --> 00:06:21.680
indices have been reversed. When we index
into a matrix we provide the row coordinate

00:06:21.680 --> 00:06:26.400
first then the column coordinate. Typically,
when we refer to the coordinate in the image

00:06:26.400 --> 00:06:30.930
itself, we write the horizontal coordinate
first and then the vertical coordinate.

